parameters:
  environment:  ''
jobs:
  - deployment:  'deploy_nuget_${{ parameters.environment }}'
    displayName: 'Deploy Nuget in ${{ parameters.environment }}'
    pool:
      vmImage: 'ubuntu-latest'
    environment:  ${{ parameters.environment }}
    variables:  []
    strategy:
      runOnce:
        deploy:
          steps:
          # Don't checkout repo:  https://docs.microsoft.com/en-us/azure/devops/pipelines/repos/azure-repos-git#checkout
          - checkout: none
          # Download artifact:  https://docs.microsoft.com/en-us/azure/devops/pipelines/artifacts/pipeline-artifacts#downloading-artifacts
          - task: DownloadPipelineArtifact@2
            displayName:  Download artefact 'source'
            inputs:
              artifact: source
          - script:  ls -l $(Pipeline.Workspace)/source/
          - script:  ls -l $(Pipeline.Workspace)/source/PasApiClientTest
          # .NET Core tests:  https://docs.microsoft.com/en-us/azure/devops/pipelines/ecosystems/dotnet-core#run-your-tests
          - task: DotNetCoreCLI@2
            displayName: Run Client Tests
            inputs:
              command: test
              projects: $(Pipeline.Workspace)/source/PasApiClientTest/PasApiClientTest.csproj
              arguments: --configuration release --settings $(Pipeline.Workspace)/source/PasApiClientTest/TestRunParameters-${{ parameters.environment }}.runsettings
          # Download artifact:  https://docs.microsoft.com/en-us/azure/devops/pipelines/artifacts/pipeline-artifacts#downloading-artifacts
          - task: DownloadPipelineArtifact@2
            displayName:  Download artefact 'nuget'
            inputs:
              artifact: nuget
