pool:
  vmImage: 'Ubuntu 16.04'

variables:
  dummy:  42
steps:
- task: PythonScript@0
  displayName: 'Inject build number'
  inputs:
    scriptPath: deployment/patch-nuget-version.py
    arguments: 'PasApiClient/PasApiClient.csproj $(Build.BuildId)'
- task: Bash@3
  displayName: 'Diagnose'
  inputs:
    script:  'pwd && ls'
- task: Bash@3
  displayName: 'Copy Alpha project'
  inputs:
    script:  'cp PasApiClient/alpha-nuget.csproj PasApiClient/PasApiClient.csproj'
- task: DotNetCoreCLI@2
  displayName: Build Alpha Nuget
  inputs:
    projects: 'PasApiClient/PasApiClient.csproj'
    arguments: '--configuration release'
- task: Bash@3
  displayName: 'Copy Gold project'
  inputs:
    script:  'cp PasApiClient/gold-nuget.csproj PasApiClient/PasApiClient.csproj'
- task: DotNetCoreCLI@2
  displayName: Build Gold Nuget
  inputs:
    projects: 'PasApiClient/PasApiClient.csproj'
    arguments: '--configuration release'
- task: DotNetCoreCLI@2
  displayName: Build Nuget tests
  inputs:
    projects: 'PasApiClientTest/*.csproj'
    arguments: '--configuration release'
- task: CopyFiles@2
  displayName: 'Copy Nuget packages'
  inputs:
    SourceFolder: .
    Contents: '**/*.nupkg'
    TargetFolder: '$(build.artifactstagingdirectory)/nuget'
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    artifactName:  nuget
    pathtoPublish: '$(build.artifactstagingdirectory)/nuget'
- task: CopyFiles@2
  displayName: 'Copy Nuget Tests'
  inputs:
    SourceFolder: .
    Contents: '**'
    TargetFolder: '$(build.artifactstagingdirectory)/source'
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    artifactName:  source
    pathtoPublish: '$(build.artifactstagingdirectory)/source'
