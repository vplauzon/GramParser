name:  Continuous Build / Test for dev

on:
  push:
    branches:
      - master
    paths:
      - code/**
      - .github/workflows/continuous-dev.yaml

env:
  IMAGE:  gram-parser-workbench

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
    - name: Patch version
      id:  patch-version
      run: python3 deployment/manage-version.py deployment/app-version-prefix.txt code/GramParserWorkbench/AppVersion.cs ${{ github.run_number }} full-version.txt
    # See https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-restore
    - name: Install dependencies
      run: dotnet restore code
    # See https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-build
    - name: Build
      run: dotnet build code --configuration Release --no-restore
    # See https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-test
    - name: Test
      run: dotnet test code --no-restore --verbosity normal

    # Docker stuff
    # See https://docs.docker.com/engine/reference/commandline/login/
    - name:  Docker Login
      run:  docker login -u ${{ secrets.docker_login }} -p ${{ secrets.docker_token }}
    # See https://docs.docker.com/engine/reference/commandline/build/
    - name:  Docker Build
      run:  docker build --file code/Dockerfile --tag ${{ secrets.docker_repo }}/$IMAGE:${{ steps.patch-version.outputs.full-version }} code/GramParserWorkbench/bin/Release/netcoreapp3.1
    # See https://docs.docker.com/engine/reference/commandline/push/
    - name:  Docker Push ${{ steps.patch-version.outputs.full-version }}
      run:  docker push ${{ secrets.docker_repo }}/$IMAGE:${{ steps.patch-version.outputs.full-version }}
    # See https://docs.docker.com/engine/reference/commandline/tag/
    - name:  Docker Tag Dev
      run:  docker tag ${{ secrets.docker_repo }}/$IMAGE:${{ steps.patch-version.outputs.full-version }} ${{ secrets.docker_repo }}/$IMAGE:dev
    - name:  Docker Push Dev
      run:  docker push ${{ secrets.docker_repo }}/$IMAGE:dev
