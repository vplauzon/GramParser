name:  Continuous Build / Test for dev

on:
  push:
    branches:
      - master

env:
  IMAGE:  gram-parser-workbench

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
    - name: Declare some variables
      run: |
        echo "Ref:  ${GITHUB_REF}"
        echo "+ head:  ${GITHUB_REF#refs/heads/}"
    # Patch the version of the library package with this run number
    - name: Patch version
      id:  patch-version
      run: python3 deployment/patch-version.py code/GramParserLib/GramParserLib.csproj ${{ github.run_number }} false
    # See https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-restore
    - name: Install dependencies
      run: dotnet restore code
    # See https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-build
    - name: Build
      run: dotnet build code --configuration Release --no-restore
    # See https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-test
    - name: Test
      run: dotnet test code --configuration Release --no-restore --verbosity normal
    # See https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-publish
    - name: .NET Publish Web App
      run: dotnet publish code/GramParserWorkbench --configuration Release --no-restore --output workbench-pack

    # Docker stuff
    # See https://docs.docker.com/engine/reference/commandline/login/
    - name:  Docker Login
      run:  docker login -u ${{ secrets.docker_login }} -p ${{ secrets.docker_token }}
    # See https://docs.docker.com/engine/reference/commandline/build/
    - name:  Docker Build
      run:  docker build --file code/Dockerfile --tag ${{ secrets.docker_repo }}/$IMAGE:${{ steps.patch-version.outputs.full-version }} workbench-pack
    # See https://docs.docker.com/engine/reference/commandline/push/
    - name:  Docker Push ${{ steps.patch-version.outputs.full-version }}
      run:  docker push ${{ secrets.docker_repo }}/$IMAGE:${{ steps.patch-version.outputs.full-version }}
    # See https://docs.docker.com/engine/reference/commandline/tag/
    - name:  Docker Tag Dev
      run:  docker tag ${{ secrets.docker_repo }}/$IMAGE:${{ steps.patch-version.outputs.full-version }} ${{ secrets.docker_repo }}/$IMAGE:dev
    - name:  Docker Push Dev
      run:  docker push ${{ secrets.docker_repo }}/$IMAGE:dev
