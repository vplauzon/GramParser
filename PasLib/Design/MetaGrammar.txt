#	Comments & interleaves
rule(interleave=false) Comment = "#" (. - ("\r" | "\n"))+;
interleave = (" " | "\r" | "\n" | "\t") | comments;

#	tokens
rule(interleave=false) identifier = ("a".."z" | "A".."Z" | "0".."9")+;
rule(interleave=false) number = ("0".."9")+;
rule(interleave=false) character = . - "\"" - "\r" - "\n";
rule(interleave=false) quotedCharacter = "\"" c:character "\"";
rule(interleave=false) literal = "\"" l:character* "\"";
rule(interleave=false) any = ".";

#	rules
rule(interleave=false) withChildrenTag = withChildrenTag:(id:identifier ":");
rule(interleave=false) noChildrenTag = noChildrenTag:(id:identifier "::");
rule(interleave=false) noTag = noTag:"";
rule(interleave=false) tag = withChildrenTag:withChildrenTag | noChildrenTag | noTag;
rule(interleave=false) range = lower:quotedCharacter ".." upper:quotedCharacter;
rule exactCardinality = "{" n:number "}";
rule minMaxCardinality = "{" min:number "," max:number "}";
rule cardinality = star:"*" | plus:"+" | question:"?" | exact:exactCardinality
	| minMax:minMaxCardinality;
rule repeat = rule:ruleBody cardinality:cardinality;
rule disjunction = t:tag head:ruleBody tail:("|" t:tag d:ruleBody)+;
rule sequence = (t:tag r:ruleBody){1,};
rule substract = t:tag primary:ruleBody "-" excluded:ruleBody;
rule braket = "(" r:ruleBody ")";
rule ruleBody = literal:literal | any:any | braket | substract | sequence
	| disjunction | repeat:repeat
	| range:range;

rule interleaveDeclaration = "interleave" "=" body:ruleBody ";";
rule boolean = true | false;
rule parameterAssignation = id:identifier "=" value:boolean;
rule parameterAssignationList = "(" head:parameterAssignation
	tail:("," parameterAssignation)* ")";
rule ruleDeclaration = "rule" params:parameterAssignationList?
	id:identifier "=" body:ruleBody ";";
rule declaration = interleaveDeclaration:interleaveDeclaration
	| ruleDeclaration:ruleDeclaration;

#	main rule
rule main = declaration*;