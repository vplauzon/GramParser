# Help:  https://aka.ms/yaml

resources:
- repo: self

trigger:
- master

variables:
  chart-path: deployment/helm-chart/ParserAsServiceApi
  image-name:  vplauzon/pas-api
  - stages:
    - stage:  build
      dependsOn:  []
      variables:
        app-version-txt-path:  deployment/ApiVersion.txt
        app-version-cs-path:  PasWebApi/ApiVersion.cs
      jobs:
      - job:  main
        dependsOn:  []
        variables:  []
        continueOnError:  false
        pool:
          vmImage: 'ubuntu-latest'
      - steps:
        - task: PythonScript@0
          displayName: 'Manage Version'
          inputs:
            scriptPath: 'deployment/manage-version.py'
            arguments: '$(app-version-txt-path) $(app-version-cs-path) $(Build.BuildId) $(Build.ArtifactStagingDirectory)/FullVersion.txt'
        - script: dotnet test PasLibTest -c release
          displayName: 'Test'
        - script: dotnet publish PasWebApi -c release -o app
          displayName: 'Build / Publish API'
        # Build Docker:  https://docs.microsoft.com/en-us/azure/devops/pipelines/ecosystems/containers/build-image?view=azure-devops
        - task: Docker@2
          displayName: Build Docker Image
          inputs:
            repository: '$(image-name)'
            command:  build
            Dockerfile: '**/Dockerfile'
            tags: '$(full-version)'
        # Push Docker:  https://docs.microsoft.com/en-us/azure/devops/pipelines/ecosystems/containers/push-image?view=azure-devops
        - task: Docker@2
          displayName:  Push Docker image
          inputs:
            containerRegistry: 'vplauzon-docker-hub'
            repository: $(imageName)
            command: push
            tags: '$(full-version)'
        # Helm tool installer:  https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/tool/helm-installer
        - task: HelmInstaller@1
          inputs:
            helmVersionToInstall: 'latest'
        # Helm deploy:  https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/deploy/helm-deploy
        - task: HelmDeploy@0
          displayName:  Helm Package
          inputs:
            command: package
            chartPath: '$(chart-path)'
            chartVersion: '$(full-version)'
        - task: CopyFiles@2
          displayName: 'Copy Release scripts'
          inputs:
            SourceFolder: deployment
            TargetFolder: '$(Build.ArtifactStagingDirectory)'
        - task: PublishBuildArtifacts@1
          displayName: 'Publish Artifact: drop'