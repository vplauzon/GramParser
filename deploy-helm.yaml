parameters:
  environment:  ''
jobs:
  - deployment:  'deploy_helm_${{ parameters.environment }}'
    displayName: 'Deploy Helm in ${{ parameters.environment }}'
    pool:
      vmImage: 'ubuntu-latest'
    environment:  ${{ parameters.environment }}
    variables:
      statelessRgPrefix:  'shared-stateless'
      clusterPrefix:  'vpl-cluster'
    strategy:
      runOnce:
        deploy:
          steps:
          # Download artifact:  https://docs.microsoft.com/en-us/azure/devops/pipelines/artifacts/pipeline-artifacts#downloading-artifacts
          - task: DownloadPipelineArtifact@2
            displayName:  Download artefact
            inputs:
              artifact: deployment
          # Azure CLI:  https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/deploy/azure-cli
          - task: AzureCLI@2
            displayName:  Fetch deployment colour
            inputs:
              azureSubscription: shared-infra
              scriptType:  'bash'
              scriptLocation: 'scriptPath'
              scriptPath:  $(Pipeline.Workspace)/deployment/deployment/get-deploy-colour.sh
          # Bash script:  https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/utility/bash
          - task: Bash@3
            displayName:  Fetch Full Version
            inputs:
              targetType: filePath
              filePath:  $(Pipeline.Workspace)/deployment/deployment/retrieve-full-version.sh
              workingDirectory:  $(Pipeline.Workspace)/deployment/deployment
          # Helm deploy:  https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/deploy/helm-deploy
          - task: HelmDeploy@0
            displayName: Helm Deploy
            inputs:
              azureSubscriptionEndpoint: shared-infra
              azureResourceGroup: '$(statelessRgPrefix)-$(colour)-${{ parameters.environment }}'
              kubernetesCluster: $(clusterPrefix)-$(colour)-${{ parameters.environment }}
              command: upgrade
              install:  true
              chartName:  '???'
              releaseName:  pas-api
              arguments: --wait
              timeoutInMinutes: 2